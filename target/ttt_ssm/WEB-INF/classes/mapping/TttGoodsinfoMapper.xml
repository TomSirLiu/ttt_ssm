<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sirLiu.ttt_ssm.dao.TttGoodsinfoMapper">
  <resultMap id="BaseResultMap" type="com.sirLiu.ttt_ssm.model.TttGoodsinfo">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="category_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="price" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="is_new" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="is_commend" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="is_discount" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="stock" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.sirLiu.ttt_ssm.model.TttGoodsinfo">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="category_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="price" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="is_new" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="is_commend" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="is_discount" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="stock" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="description" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, category_id, price, is_new, is_commend, is_discount, stock
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sirLiu.ttt_ssm.model.TttGoodsinfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ttt_goodsinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sirLiu.ttt_ssm.model.TttGoodsinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ttt_goodsinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ttt_goodsinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ttt_goodsinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sirLiu.ttt_ssm.model.TttGoodsinfoExample">
    delete from ttt_goodsinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sirLiu.ttt_ssm.model.TttGoodsinfo">
    insert into ttt_goodsinfo (id, name, category_id, 
      price, is_new, is_commend, is_discount, 
      stock, description)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, 
      #{price,jdbcType=INTEGER}, #{isNew,jdbcType=BIT}, #{isCommend,jdbcType=BIT}, #{isDiscount,jdbcType=BIT}, 
      #{stock,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sirLiu.ttt_ssm.model.TttGoodsinfo">
    insert into ttt_goodsinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="isNew != null">
        is_new,
      </if>
      <if test="isCommend != null">
        is_commend,
      </if>
      <if test="isDiscount != null">
        is_discount,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="isNew != null">
        #{isNew,jdbcType=BIT},
      </if>
      <if test="isCommend != null">
        #{isCommend,jdbcType=BIT},
      </if>
      <if test="isDiscount != null">
        #{isDiscount,jdbcType=BIT},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sirLiu.ttt_ssm.model.TttGoodsinfoExample" resultType="java.lang.Integer">
    select count(*) from ttt_goodsinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ttt_goodsinfo
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.isNew != null">
        is_new = #{record.isNew,jdbcType=BIT},
      </if>
      <if test="record.isCommend != null">
        is_commend = #{record.isCommend,jdbcType=BIT},
      </if>
      <if test="record.isDiscount != null">
        is_discount = #{record.isDiscount,jdbcType=BIT},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update ttt_goodsinfo
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      is_new = #{record.isNew,jdbcType=BIT},
      is_commend = #{record.isCommend,jdbcType=BIT},
      is_discount = #{record.isDiscount,jdbcType=BIT},
      stock = #{record.stock,jdbcType=INTEGER},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ttt_goodsinfo
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      is_new = #{record.isNew,jdbcType=BIT},
      is_commend = #{record.isCommend,jdbcType=BIT},
      is_discount = #{record.isDiscount,jdbcType=BIT},
      stock = #{record.stock,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sirLiu.ttt_ssm.model.TttGoodsinfo">
    update ttt_goodsinfo
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="isNew != null">
        is_new = #{isNew,jdbcType=BIT},
      </if>
      <if test="isCommend != null">
        is_commend = #{isCommend,jdbcType=BIT},
      </if>
      <if test="isDiscount != null">
        is_discount = #{isDiscount,jdbcType=BIT},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sirLiu.ttt_ssm.model.TttGoodsinfo">
    update ttt_goodsinfo
    set name = #{name,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      is_new = #{isNew,jdbcType=BIT},
      is_commend = #{isCommend,jdbcType=BIT},
      is_discount = #{isDiscount,jdbcType=BIT},
      stock = #{stock,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sirLiu.ttt_ssm.model.TttGoodsinfo">
    update ttt_goodsinfo
    set name = #{name,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      is_new = #{isNew,jdbcType=BIT},
      is_commend = #{isCommend,jdbcType=BIT},
      is_discount = #{isDiscount,jdbcType=BIT},
      stock = #{stock,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>